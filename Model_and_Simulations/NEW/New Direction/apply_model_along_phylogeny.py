
from model_application import apply_model_along_phylogeny
import csv

species_name = 'Bacillus_anthracis'
species_path = 'C:/Users/Owner/Documents/UNCG REU/Project/BIGG DATA/Useful Data/Concatenates, Trees, Homoplasies/Aayyy Clonal/Bacillus_anthracis/concat_universal.fa'
kappa = 1.86836732388
tree_string = '(B57:0.00002151359142686458,((B64:0.00006483314614814997,B66:0.00006454379266932773):0.00000100000050002909,(B4:0.00006454799714257598,((B52:0.00000100000050002909,(B72:0.00006453932097448163,((B51:0.00011404214649481417,B7:0.00002306656980674110):0.00027392468655199569,((B34:0.00002151631167435291,(B9:0.00006876638896946039,B29:0.00000100000050002909):0.00004303591462261814):0.00002151545779588741,(B6:0.00006309001023541822,B15:0.00000100000050002909):0.00002816354086979557):0.00006455727289752973):0.00008610187140388709):0.00000100000050002909):0.00000100000050002909,(((((B83:0.00002151590565694596,B45:0.00008608415345512176):0.00002150992877216605,B21:0.00004303456006114923):0.00000100000050002909,B36:0.00004303177616292186):0.00000100000050002909,B84:0.00004343160055427527):0.00002150362950358651,(B89:0.00000100000050002909,B99:0.00008605580042589467):0.00015070795576246194):0.00000100000050002909):0.00002151096820486005):0.00000100000050002909):0.00002151386414347454,B58:0.00004303048201173684):0.0;'
# '(B57:0.00002151359142686458,((B64:0.00006483314614814997,B66:0.00006454379266932773):0.00000100000050002909,(B4:0.00006454799714257598,((B52:0.00000100000050002909,(B72:0.00006453932097448163,((B51:0.00011404214649481417,B7:0.00002306656980674110):0.00027392468655199569,((B34:0.00002151631167435291,(B9:0.00006876638896946039,B29:0.00000100000050002909):0.00004303591462261814):0.00002151545779588741,(B6:0.00006309001023541822,B15:0.00000100000050002909):0.00002816354086979557):0.00006455727289752973):0.00008610187140388709):0.00000100000050002909):0.00000100000050002909,(((((B83:0.00002151590565694596,B45:0.00008608415345512176):0.00002150992877216605,B21:0.00004303456006114923):0.00000100000050002909,B36:0.00004303177616292186):0.00000100000050002909,B84:0.00004343160055427527):0.00002150362950358651,(B89:0.00000100000050002909,B99:0.00008605580042589467):0.00015070795576246194):0.00000100000050002909):0.00002151096820486005):0.00000100000050002909):0.00002151386414347454,B58:0.00004303048201173684):0.0;'
# '(B57:0.00000536707125664551,((((B83:0.00002318173951070520,B45:0.00003365367407355436):0.00001970126751875890,(((B84:0.00000948118264665464,B99:0.00001914943883007716):0.00001143909786772645,(((B52:0.00005185110847249898,B89:0.00001633969855456498):0.00004537804571909241,B21:0.00011406645637562866):0.00001953691402093377,(B72:0.00008420804257297685,((B51:0.00008978912752602243,B7:0.00002287080714303825):0.00029324771986313119,((B34:0.00002730728276759067,(B9:0.00003316646850023659,B29:0.00002086920547771337):0.00008771969195870552):0.00002492360304559525,(B6:0.00000881808638051164,B15:0.00006370050086096601):0.00001778245864060021):0.00012946764031754985):0.00011766209279446951):0.00001247173836728674):0.00000100000050002909):0.00000844349545619994,B36:0.00002509526808151878):0.00000667150366752081):0.00009163824755429087,B4:0.00002332293862512587):0.00000616528362070958,(B66:0.00003411246880153140,B64:0.00003762063742532716):0.00000653195343569950):0.00001043697034630331,B58:0.00004497951428308054):0.0;'

output = apply_model_along_phylogeny(species_path, kappa, tree_string)
strain_names = output['strain_names']
c_matrix = output['Convergent']
print(c_matrix)
# for x in range(1000):
# 	print('DDDDDDDDDDDDDDDDDDDDDOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE')


shape = c_matrix.shape
with open((species_name +'_universal2_c_matrix' + '.csv'), 'w', newline = '') as f: 
	writer = csv.writer(f)
	writer.writerow([species_name])
	header = ['']
	header.extend(strain_names)
	writer.writerow(header)
	for row in range(shape[0]):
		write_row = [strain_names[row]]
		write_row.extend(c_matrix[row])
		writer.writerow(write_row)

# species_name = 'Bacillus_anthracis'
# species_path = 'C:/Users/Owner/Documents/UNCG REU/Project/BIGG DATA/Useful Data/Concatenates, Trees, Homoplasies/Aayyy Clonal/Bacillus_anthracis/concat_core.fa'
# kappa = 1.86836732388
# tree_string = '(B57:0.00000536707125664551,((((B83:0.00002318173951070520,B45:0.00003365367407355436):0.00001970126751875890,(((B84:0.00000948118264665464,B99:0.00001914943883007716):0.00001143909786772645,(((B52:0.00005185110847249898,B89:0.00001633969855456498):0.00004537804571909241,B21:0.00011406645637562866):0.00001953691402093377,(B72:0.00008420804257297685,((B51:0.00008978912752602243,B7:0.00002287080714303825):0.00029324771986313119,((B34:0.00002730728276759067,(B9:0.00003316646850023659,B29:0.00002086920547771337):0.00008771969195870552):0.00002492360304559525,(B6:0.00000881808638051164,B15:0.00006370050086096601):0.00001778245864060021):0.00012946764031754985):0.00011766209279446951):0.00001247173836728674):0.00000100000050002909):0.00000844349545619994,B36:0.00002509526808151878):0.00000667150366752081):0.00009163824755429087,B4:0.00002332293862512587):0.00000616528362070958,(B66:0.00003411246880153140,B64:0.00003762063742532716):0.00000653195343569950):0.00001043697034630331,B58:0.00004497951428308054):0.0;'
# # '(B57:0.00002151359142686458,((B64:0.00006483314614814997,B66:0.00006454379266932773):0.00000100000050002909,(B4:0.00006454799714257598,((B52:0.00000100000050002909,(B72:0.00006453932097448163,((B51:0.00011404214649481417,B7:0.00002306656980674110):0.00027392468655199569,((B34:0.00002151631167435291,(B9:0.00006876638896946039,B29:0.00000100000050002909):0.00004303591462261814):0.00002151545779588741,(B6:0.00006309001023541822,B15:0.00000100000050002909):0.00002816354086979557):0.00006455727289752973):0.00008610187140388709):0.00000100000050002909):0.00000100000050002909,(((((B83:0.00002151590565694596,B45:0.00008608415345512176):0.00002150992877216605,B21:0.00004303456006114923):0.00000100000050002909,B36:0.00004303177616292186):0.00000100000050002909,B84:0.00004343160055427527):0.00002150362950358651,(B89:0.00000100000050002909,B99:0.00008605580042589467):0.00015070795576246194):0.00000100000050002909):0.00002151096820486005):0.00000100000050002909):0.00002151386414347454,B58:0.00004303048201173684):0.0;'
# # '(B57:0.00002151359142686458,((B64:0.00006483314614814997,B66:0.00006454379266932773):0.00000100000050002909,(B4:0.00006454799714257598,((B52:0.00000100000050002909,(B72:0.00006453932097448163,((B51:0.00011404214649481417,B7:0.00002306656980674110):0.00027392468655199569,((B34:0.00002151631167435291,(B9:0.00006876638896946039,B29:0.00000100000050002909):0.00004303591462261814):0.00002151545779588741,(B6:0.00006309001023541822,B15:0.00000100000050002909):0.00002816354086979557):0.00006455727289752973):0.00008610187140388709):0.00000100000050002909):0.00000100000050002909,(((((B83:0.00002151590565694596,B45:0.00008608415345512176):0.00002150992877216605,B21:0.00004303456006114923):0.00000100000050002909,B36:0.00004303177616292186):0.00000100000050002909,B84:0.00004343160055427527):0.00002150362950358651,(B89:0.00000100000050002909,B99:0.00008605580042589467):0.00015070795576246194):0.00000100000050002909):0.00002151096820486005):0.00000100000050002909):0.00002151386414347454,B58:0.00004303048201173684):0.0;'
# # '(B57:0.00000536707125664551,((((B83:0.00002318173951070520,B45:0.00003365367407355436):0.00001970126751875890,(((B84:0.00000948118264665464,B99:0.00001914943883007716):0.00001143909786772645,(((B52:0.00005185110847249898,B89:0.00001633969855456498):0.00004537804571909241,B21:0.00011406645637562866):0.00001953691402093377,(B72:0.00008420804257297685,((B51:0.00008978912752602243,B7:0.00002287080714303825):0.00029324771986313119,((B34:0.00002730728276759067,(B9:0.00003316646850023659,B29:0.00002086920547771337):0.00008771969195870552):0.00002492360304559525,(B6:0.00000881808638051164,B15:0.00006370050086096601):0.00001778245864060021):0.00012946764031754985):0.00011766209279446951):0.00001247173836728674):0.00000100000050002909):0.00000844349545619994,B36:0.00002509526808151878):0.00000667150366752081):0.00009163824755429087,B4:0.00002332293862512587):0.00000616528362070958,(B66:0.00003411246880153140,B64:0.00003762063742532716):0.00000653195343569950):0.00001043697034630331,B58:0.00004497951428308054):0.0;'

# output = apply_model_along_phylogeny(species_path, kappa, tree_string)
# strain_names = output['strain_names']
# c_matrix = output['Convergent']
# print(c_matrix)
# # for x in range(1000):
# # 	print('DDDDDDDDDDDDDDDDDDDDDOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE')


# shape = c_matrix.shape
# with open((species_name +'core_c_matrix' + '.csv'), 'w', newline = '') as f: 
# 	writer = csv.writer(f)
# 	writer.writerow([species_name])
# 	header = ['']
# 	header.extend(strain_names)
# 	writer.writerow(header)
# 	for row in range(shape[0]):
# 		write_row = [strain_names[row]]
# 		write_row.extend(c_matrix[row])
# 		writer.writerow(write_row)

# species_name = 'Brucella_abortus'
# species_path = 'C:/Users/Owner/Documents/UNCG REU/Project/BIGG DATA/Useful Data/Concatenates, Trees, Homoplasies/Aayyy Clonal/Brucella_abortus/concat_universal.fa'
# kappa = 1.53913593397
# tree_string = '((B113:0.00005879604116751394,B124:0.00020794057351735467):0.00000100000050002909,((B114:0.00005911384507513888,((B128:0.00004016674030469880,(B36:0.00001970223459557902,B3:0.00003940757563678240):0.00001970689089319374):0.00000100000050002909,((B120:0.00007882087935484665,B25:0.00003940706588965667):0.00000100000050002909,(((B57:0.00003940213819052686,B24:0.00008067562034406939):0.00001970945129114358,(B161:0.00005911549358710324,B30:0.00000100000050002909):0.00001970488549024501):0.00005878444735569737,B143:0.00004172077366480799):0.00000100000050002909):0.00000100000050002909):0.00000100000050002909):0.00001970287924073857,(((((B86:0.00002015717200991594,B101:0.00005911435748878683):0.00003940494790889517,(B4:0.00004128932384286253,(B146:0.00012805981091636317,B7:0.00000100000050002909):0.00005048862919678376):0.00000100000050002909):0.00005911481553926048,(((B134:0.00004212365445812317,(B152:0.00002015609262689240,B125:0.00004233912788549767):0.00000100000050002909):0.00002015604988233338,(B130:0.00006170529158251259,B26:0.00001970149967696235):0.00000100000050002909):0.00001970298305052409,(B156:0.00006047866614799330,B47:0.00001970217268310532):0.00000100000050002909):0.00000100000050002909):0.00007882222852526883,(((B89:0.00014871431925759897,B133:0.00008428225620775745):0.00025524230150870335,(B22:0.00035927162267127054,(B23:0.00019628658741525424,B21:0.00021578757432798247):0.00051624702356407447):0.00033510557404202917):0.00016142308142444455,((B6:0.00008396389153624353,((B81:0.00003941684251955681,B84:0.00005911794309384126):0.00001969973778270514,B37:0.00000100000050002909):0.00001968905693575699):0.00011828420351780822,(B44:0.00001970297644068108,(B83:0.00005911752305565286,B82:0.00007883216025807988):0.00000100000050002909):0.00013807097309535775):0.00019728465081380705):0.00007885946085692514):0.00009859037925985577,B74:0.00005915147129659651):0.00001968923313017680):0.00000100000050002909,B118:0.00000100000050002909):0.0;'

# output = apply_model_along_phylogeny(species_path, kappa, tree_string)
# strain_names = output['strain_names']
# c_matrix = output['Convergent']
# print(c_matrix)
# # for x in range(1000):
# # 	print('DDDDDDDDDDDDDDDDDDDDDOOOOOOOOOOOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE')


# shape = c_matrix.shape
# with open((species_name +'universal_c_matrix' + '.csv'), 'w', newline = '') as f: 
# 	writer = csv.writer(f)
# 	writer.writerow([species_name])
# 	header = ['']
# 	header.extend(strain_names)
# 	writer.writerow(header)
# 	for row in range(shape[0]):
# 		write_row = [strain_names[row]]
# 		write_row.extend(c_matrix[row])
# 		writer.writerow(write_row)